{"version":3,"sources":["components/UseFetch.js","components/AppProvider.js","components/Nominations.js","components/Results.js","components/Search.js","components/Movie.js","App.js","index.js"],"names":["url","process","useFetch","title","useState","movies","setMovies","error","setError","fetchMovies","a","fetch","response","json","data","Error","Search","console","log","useEffect","AppContext","createContext","AppProvider","children","searchTitle","setSearchTitle","nominations","setNominations","movie","setMovie","storage","JSON","parse","localStorage","getItem","setItem","stringify","Provider","value","useGlobalContext","useContext","Nominations","className","length","map","item","onClick","Title","Year","newNominations","filter","imdbID","removeNomminations","Results","msg","substring","some","alert","addNomminations","React","useRef","action","htmlFor","type","id","placeholder","ref","onChange","current","Movie","href","Poster","src","alt","Type","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a70a04a8.chunk.js","sourcesContent":["import {useState, useEffect} from 'react'\r\n\r\nconst url = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_OMDB_KEY}&s=`;\r\n\r\nconst useFetch = (title) => {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const fetchMovies = async () => {\r\n        try{\r\n            setError(\"\");\r\n            const response = await fetch(`${url}${title}`);\r\n            const data = await response.json();\r\n            const { Error, Search } = data;\r\n            if (Search){\r\n                setMovies(Search);\r\n            }\r\n            else if(Error){\r\n                setMovies([]);\r\n                setError(Error);\r\n            }else{\r\n                setMovies([]);\r\n                setError(\"Error occurred please try again\");\r\n            }\r\n\r\n        }catch(error) {\r\n            console.log(error);\r\n            setMovies([]);\r\n            setError(\"Error occurred please try again\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n    }, [title]);\r\n\r\n    return {error, movies};\r\n}\r\n\r\nexport default useFetch;\r\n","import { useState, useEffect, useContext, createContext } from 'react'\r\nimport useFetch from './UseFetch'\r\n\r\nconst AppContext = createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n    const [searchTitle, setSearchTitle] = useState(\"\");\r\n    const [nominations, setNominations] = useState([]);\r\n    const [movie, setMovie] = useState(null);\r\n    const {error, movies } = useFetch(searchTitle);\r\n\r\n    useEffect(() => {\r\n        let storage = JSON.parse(localStorage.getItem(\"Nominations\"));\r\n        storage = storage ? storage : [];\r\n        setNominations(storage);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"Nominations\", JSON.stringify(nominations));\r\n    }, [nominations])\r\n\r\n    return (\r\n        <AppContext.Provider value={{searchTitle, nominations, movie, movies, error, setSearchTitle, setNominations, setMovie}}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext);\r\n}\r\n\r\nexport  { AppContext, AppProvider }\r\n","import { useGlobalContext } from './AppProvider';\r\nimport { CgRemove } from 'react-icons/cg'\r\n\r\nconst Nominations = () => {\r\n\r\n    const { nominations, setNominations, setMovie } = useGlobalContext();\r\n\r\n    const removeNomminations = (movie) => {\r\n        const newNominations = nominations.filter((item) => item.imdbID !== movie.imdbID);\r\n        setNominations(newNominations);\r\n    }\r\n\r\n    return (\r\n        <section className=\"nominations\">\r\n            <div className=\"list-title\">\r\n                <h2> Nominations </h2>\r\n                <h2> {nominations.length} </h2>\r\n            </div>\r\n\r\n            <ul>\r\n                { \r\n                    nominations.map((item) => {\r\n                        return (\r\n                            <li key={item.imdbID} className=\"list\"> \r\n                                <h3 className=\"movie-title\" onClick={() => setMovie(item)}>{item.Title} ({item.Year})</h3>\r\n                                <CgRemove className=\"icon\" onClick={() => removeNomminations(item)} />\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Nominations\r\n","import { useGlobalContext } from './AppProvider';\r\nimport { CgAdd } from 'react-icons/cg'\r\n\r\nconst Results = () => {\r\n    const { searchTitle, nominations, movies, error, setNominations, setMovie } = useGlobalContext();\r\n\r\n    const msg = searchTitle && error ? error : \"Use Search bar to Search\"\r\n    const title = searchTitle.length < 20 ? searchTitle : searchTitle.substring(1, 21) + \"...\"\r\n\r\n    const addNomminations = (movie) => {\r\n        nominations.length >=5 ? alert(\"You have reach maximum of 5 nominations\") :\r\n        setNominations(nominations => [movie, ...nominations]);\r\n    }\r\n\r\n    const inNomination = (movie) => {\r\n        return nominations.some((item) => item.imdbID === movie.imdbID)\r\n    }\r\n\r\n    return (\r\n        <section className=\"results\">\r\n            <h2> Results for \"{title}\" </h2>\r\n            \r\n            <ul>\r\n                { \r\n                    movies.length < 1 ? <h2>{msg}</h2> :\r\n                    movies.map((item) => {\r\n                        return (\r\n                        <li key={item.imdbID} className=\"list\">\r\n                            <h3 className=\"movie-title\" onClick={() => setMovie(item)}>{item.Title} ({item.Year})</h3>\r\n                            \r\n                            { \r\n                                inNomination(item) ? \"\" : <CgAdd className=\"icon\" onClick={() => addNomminations(item)}/>\r\n                            }\r\n                        </li>)\r\n                    })\r\n                }\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Results\r\n","import React from 'react'\r\nimport { useGlobalContext } from './AppProvider';\r\nimport { BsSearch } from 'react-icons/bs'\r\n\r\nconst Search = () => {\r\n    const { setSearchTitle } = useGlobalContext();\r\n    const title = React.useRef('');\r\n\r\n    const handleChange = () => {\r\n         setSearchTitle(title.current.value);\r\n    }\r\n\r\n    return (\r\n        <section className=\"search\">\r\n            <form className=\"search-form\" action=\"\">\r\n                <div>\r\n                    <label htmlFor=\"search-title\">Movie Titles</label>\r\n                </div>\r\n                <div className=\"search-bar\">\r\n                    <BsSearch className=\"icon-static\"/>\r\n                    <input className=\"input-field\" type=\"text\" id=\"search-title\" placeholder=\"Search Movie Title ...\" ref={title} onChange={handleChange}/>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import { useGlobalContext } from './AppProvider';\r\n\r\nconst Movie = () => {\r\n    \r\n    const { movie } = useGlobalContext();\r\n\r\n    if (!movie){\r\n        return <></>\r\n    }\r\n\r\n    return (\r\n        <section className=\"movie\">\r\n            <a href={movie.Poster}><img src={movie.Poster} alt={movie.Title}/></a>\r\n            <div className=\"movie-info\">\r\n                <h2>Movie Details</h2>\r\n                <h3>Title: {movie.Title}</h3>\r\n                <h3>Year: {movie.Year}</h3>\r\n                <h3>Type: {movie.Type}</h3>\r\n                <h3>imdbID: {movie.imdbID}</h3>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","import Nominations from './components/Nominations';\nimport Results from './components/Results';\nimport Search from './components/Search';\n\nimport './App.css';\nimport Movie from './components/Movie';\n\nfunction App() {\n  return (\n    <main>\n        <h2 className=\"header\"> \n          The Shoppies\n        </h2>\n        <Search />\n        <Results />\n        <Nominations />\n        <Movie />\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { AppProvider } from './components/AppProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}